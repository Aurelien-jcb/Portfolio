/* NavBar Components */
.navbar-brand {
  text-decoration: none;
  color: $fontcolor !important;
}

.nav__social {
  display: none;
}

.menu__item {
  overflow-x: clip;
  color: $backgroundcolor;
  padding-bottom: 3px;
  padding-top: 30px;
  position: relative;
}

.marquee__section {
 display: none;
}

.menu__item a {
  border-bottom: 1px solid $accentcolor;
  z-index: 10;
  text-decoration: none;
  font-size: 20px;
  text-transform: uppercase;
  transition: 0.4s ease-in-out;
}

.menu__item a:hover {
  border-bottom: 1px solid $accentcolor;
  color: white;
}
.marquee__section {
  z-index: -1;
  position: absolute;
  top: -17px;
  font-family: "Raleway", sans-serif;
  font-weight: 900;
  color: #f29100;
  // Here we're setting up the animations.
  // translate3d takes in 3 arguments (x, y, z)
  // In these animations, we're only using the x.
  // marqueeOne moves from RIGHT to LEFT.
  @keyframes marqueeOne {
    0% {
      transform: translate3d(var(--move-initial), 0, 0);
    }

    100% {
      transform: translate3d(var(--move-final), 0, 0);
    }
  }

  // marqueeTwo moves from LEFT to RIGHT.
  @keyframes marqueeTwo {
    0% {
      transform: translate3d(var(--move-final), 0, 0);
    }

    100% {
      transform: translate3d(var(--move-initial), 0, 0);
    }
  }
  
  .marquee__container {
    width: 100%;
    display: flex;
    place-items: center;
  }

  .marquee {
    position: relative;
    // Overflow hidden prevents the div from being scrollable.
    overflow: hidden;
    // Offset is just the off-screen placement of the marquees. We don't want them dead-center.
    --offset: 20vw;
    // Adjust "-25%" based on how many spans you have.
    // In our case, "-25%" is ONE span out of FOUR.
    // The -50% is just double that, so when the animation resets,
    // the text will have moved in such a way that one span overlaps the span next to it.
    --move-initial: calc(-25% + var(--offset));
    --move-final: calc(-50% + var(--offset));

    &__inner {
      // Width of the div is set to FIT its content.
      width: fit-content;
      display: flex;
      position: relative;
      // white-space: nowrap; means on overflow, the text doesn't wrap to the next line.
      // This allows us to have a single line of text, regardless of the font-size.
      white-space: nowrap;
      span {
        // I chose a font-size of 10vw just because it looks good and adapts to the screen size.
        // I could use clamp() here, but I want the font-size to adapt consistently at every viewport width.
        // If I set a min/max font-size with clamp(), it'll mess up the animation.
        font-size: 5vw;
        padding: 0 2vw;
        text-transform: uppercase;
      }
    }
    .first {
      // Here our text moves in the x-direction (left/right) based on our variable above.
      transform: translate3d(var(--move-initial), 0, 0);
      // Here we declare our animation.
      // We're using the marqueeOne animation.
      // 10s duration with a linear ease and will repeat infinitely.
      animation: marqueeOne 10s linear infinite;

      span {
        // This is how you get those 'bordered' texts.
        // text-stroke is the border.
        // text-fill-color is (obviously) the fill color of the text.
        -webkit-text-stroke: 2px #f29100;
        -webkit-text-fill-color: transparent;
        @media (min-width: 1024px) {
          -webkit-text-stroke: 3px #f29100;
        }
      }
    }

    .second {
      // Here our text moves in the x-direction (left/right) based on our variable above.
      // I'm using the final variable here as this second marquee is the reverse of the first one.
      // Although, when I experimented with this, it didn't seem to matter haha.
      transform: translate3d(var(--final-initial), 0, 0);
      // We're using the marqueeTwo animation (basically reverse of marqueeOne).
      // 10s duration with a linear ease and will repeat infinitely.
      animation: marqueeTwo 10s linear infinite;
    }
  }
}

.menu__container {
  box-shadow: 0 0 10px #030303;
  text-align: center;
  display: flex;
  list-style: none;
  position: fixed;
  width: 400px;
  height: 100%;
  top: 0;
  right: 0;
  padding: 10px 0;
  background-color: $backgroundsection;
  flex-direction: column;
  justify-content: center;
  box-shadow: black;
  transition: all 0.3s linear;
  transform: translate(102%);
  z-index: 5;
}

.openedMenu {
  transform: translate(0%);
}

@media screen and (min-width: 670px) {
  .menu__container {
    width: 30%;
  }
  .menu__item:hover {
    .marquee__section {
      display: block;
    }
  }
}
.menu {
  background-color: transparent;
  border: none;
  cursor: pointer;
  display: flex;
  padding: 0;
  width: 40px;
  height: 40px;
  z-index: 10;
}
.menu:focus {
  outline: none;
}
.line {
  fill: none;
  stroke: $accentcolor;
  stroke-width: 6;
  transition: stroke-dasharray 600ms cubic-bezier(0.4, 0, 0.2, 1),
    stroke-dashoffset 600ms cubic-bezier(0.4, 0, 0.2, 1);
}
.line1 {
  stroke-dasharray: 60 207;
  stroke-width: 6;
}
.line2 {
  stroke-dasharray: 60 60;
  stroke-width: 6;
}
.line3 {
  stroke-dasharray: 60 207;
  stroke-width: 6;
}
.opened .line1 {
  stroke-dasharray: 90 207;
  stroke-dashoffset: -134;
  stroke-width: 6;
}
.opened .line2 {
  stroke-dasharray: 1 60;
  stroke-dashoffset: -30;
  stroke-width: 6;
}
.opened .line3 {
  stroke-dasharray: 90 207;
  stroke-dashoffset: -134;
  stroke-width: 6;
}

@media screen and (min-width: 900px) {
  .navbar {
    margin: 19px 65px;
  }

  .nav__social {
    display: block;
  }

  .nav__social a {
    color: $accentcolor;
    font-size: 30px;
    margin-right: 34px;
  }
}
